/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package programming.task1;

import java.security.SignatureException;

public final class TicTacToe {

    private final int size;

    private final String[][] field;

    private final String CROSS = "X";

    private final String ZERO = "0";

    private final String EMPTY = "*";

    public TicTacToe(int size) {
        this.size = size;
        field = new String[size][size];
        for (int i = 0; i < size; i++)
            for(int j = 0; j < size; j++) {
                field[i][j] = EMPTY;
            }
    }
    //добавление нолика
    public void addZero(int row, int column) {
        if (field[row - 1][column - 1].equals(EMPTY)) field[row - 1][column - 1] = ZERO;
    }

    //добавление крестика
    public void addCross(int row, int column) {
        if (field[row - 1][column - 1].equals(EMPTY)) field[row - 1][column - 1] = CROSS;
    }

    //получение значения поля(для тестов)
    public String getValue(int row, int column) {
        return field[row - 1][column - 1];
    }
    //очистка поля
    public void clear(int row, int column) {
        if (!field[row - 1][column - 1].equals(EMPTY)) field[row - 1][column - 1] = EMPTY;
    }

    //поиск максимальной последовательности
    public int maxSequence(String sign) {
        int maxLength = -1;
        int length = 0;
        //главная диагональ
        for (int i = 0; i < size; i++) {
            if (field[i][i].equals(sign)) length++;
                    else length = 0;
            if (maxLength < length) maxLength = length;
        }

        //побочная диагональ
        length = 0;
        for (int i = 0; i < size; i++) {
            if (field[i][size - i - 1].equals(sign)) length++;
                    else length = 0;
            if (maxLength < length) maxLength = length;
        }

        //вертикаль
        for (int j = 0; j < size; j++) {
            length = 0;
            for (int i = 0; i < size; i++) {
                if (field[i][j].equals(sign)) length++;
                        else length = 0;
                if (maxLength < length) maxLength = length;
            }
        }

        //горизонталь
        for (int i = 0; i < size; i++) {
            length = 0;
            for (int j = 0; j < size; j++) {
                if (field[i][j].equals(sign)) length++;
                        else length = 0;
                if (maxLength < length) maxLength = length;
            }
        }
        return maxLength;
    }
}

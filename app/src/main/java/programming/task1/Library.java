


/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package programming.task1;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;


/*
Вариант 21 -- библиотека [Java]
Хранит информацию о книгах и позволяет их искать. Для каждой книги хранится
название, автор и жанр, а также код полки, на которой она лежит (например, А3 или Г4.
Вы можете сами придумать реалистичную систему кодирования полок).
Операции: конструктор, добавить/удалить книгу, изменить существующую книгу,
переместить книгу на другую полку, поиск книг по разным признакам (по автору, по
названию, по словам из названия, по жанру, по коду полки, по комбинации этих
признаков).

название, автор, жанр, код полки

конструктор, добавить/удалить книгу, изменить существующую книгу,
переместить книгу на другую полку, поиск книг по разным признакам

 */
public class Library {

    private HashMap<String, Book> library = new HashMap<>();

    public void addBook(String code, Book book){
        library.put(code, book);
    }
    public boolean deleteBook(String code){
        if (!library.containsKey(code)) return false;
        library.remove(code);
        return true;
    }
    public boolean changeBook(String code, Book book){
        if (!library.containsKey(code)) return false;
        library.replace(code, book);
        return true;
    }
    public boolean moveBook(String code, String newcode){
        if (!library.containsKey(code)) return false;
        library.put(newcode, library.get(code));
        library.remove(code);
        return true;
    }
    public List findBookByTitle(String title){
        List<Book> list = new ArrayList<>();
        for (String code: library.keySet()){
            if (library.get(code).title.contains(title)) list.add(library.get(code));

        } return list;
    }
    public List findBookByAuthor(String author){
        List<Book> list = new ArrayList<>();
        for (String code: library.keySet()){
            if (library.get(code).author.contains(author)) list.add(library.get(code));
        } return list;
    }
    public List findBookByGenre(String genre){
        List<Book> list = new ArrayList<>();
        for (String code: library.keySet()){
            if (library.get(code).genre.contains(genre)) list.add(library.get(code));
        } return list;
    }
    public Book findBookByCode(String code){
        return library.get(code);
    }
}

class Book {

    String title;
    String author;
    String genre;

    public Book(String title, String author, String genre){
        this.title = title;
        this.author = author;
        this.genre = genre;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(title);
        sb.append(", автор: ");
        sb.append(author);
        sb.append(", жанр: ");
        sb.append(genre);
        return sb.toString();
    }
}
